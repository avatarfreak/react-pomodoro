{"version":3,"sources":["components/Footer.js","components/Time.js","components/Timer.js","components/Break.js","components/Session.js","App.js","serviceWorker.js","index.js"],"names":["Footer","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","style","color","fontFamily","letterSpacing","backgroundColor","fontSize","target","rel","href","Component","Time","props","_this","call","state","initialOffset","circum","_this$props","sessionTime","breakTime","timeRemaining","status","document","getElementById","setAttributeNS","minutes","Math","floor","seconds","concat","id","r","cx","cy","displayTime","prototypes","PropTypes","number","isRequired","bool","Timer","initialize","display","startTimer","active","components_Time","reset","onClick","func","Break","increment","decrement","time","Session","App","bind","assertThisInitialized","countDown","clearInterval","counter","audio","pause","currentTime","setState","e","setInterval","newState","play","_this$state","_this$state2","_this2","components_Timer","components_Break","components_Session","src","ref","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.361c6954.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { isWhiteSpaceLike } from \"typescript\";\nimport { NONAME } from \"dns\";\n\nexport class Footer extends Component {\n  render() {\n    const footer = {\n      color: \"white\",\n      fontFamily: \"cursive\",\n      letterSpacing: \"2px\",\n      backgroundColor: \"#333\",\n      fontSize: \"13px\",\n    };\n    return (\n      <div className=\"footer\" style={footer}>\n        <p>\n          Designed and Developed by{\" \"}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            href=\"https://github.com/avatarfreak\"\n          >\n            {\" \"}\n            Dave.{\" \"}\n          </a>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport class Time extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialOffset: 679\n    };\n  }\n\n  componentDidUpdate() {\n    let { sessionTime, breakTime, timeRemaining, status } = this.props;\n    let { initialOffset } = this.state;\n    let circum;\n\n    if (!status && timeRemaining > -1) {\n      sessionTime = sessionTime * 60;\n      circum = (initialOffset / sessionTime) * timeRemaining;\n    } else {\n      breakTime = breakTime * 60;\n      circum = (initialOffset / breakTime) * timeRemaining;\n    }\n\n    document\n      .getElementById(\"circle_animation\")\n      .setAttributeNS(null, \"stroke-dashoffset\", circum);\n  }\n\n  displayTime() {\n    let { timeRemaining } = this.props;\n    let minutes = Math.floor(timeRemaining / 60);\n    let seconds = Math.floor(timeRemaining % 60);\n\n    let timeDisplay = `${minutes < 10 ? \"0\" + minutes : minutes}:${\n      seconds < 10 ? \"0\" : \"\"\n    }${seconds}`;\n    return timeDisplay;\n  }\n  render() {\n    return (\n      <div className=\"pie\" id=\"pie\">\n        <div className=\"block\">\n          <svg>\n            <circle id=\"circle_animation\" r=\"108\" cx=\"110\" cy=\"110\" />\n          </svg>\n          <span id=\"time-left\">{this.displayTime()}</span>\n        </div>\n      </div>\n    );\n  }\n}\nTime.prototypes = {\n  sessionTime: PropTypes.number.isRequired,\n  breakTime: PropTypes.number.isRequired,\n  timeRemaining: PropTypes.number.isRequired,\n  status: PropTypes.bool.isRequired,\n  initialOffset: PropTypes.number.isRequired\n};\nexport default Time;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Time from \"./Time\";\nexport class Timer extends Component {\n  render() {\n    let {\n      initialize,\n      display,\n      status,\n      startTimer,\n      active,\n      breakTime,\n      sessionTime\n    } = this.props;\n    return (\n      <div className=\"time-box\">\n        <div id=\"timer-label\">\n          <h3>{!status ? \"Happy Working\" : \"Take A Break\"}</h3>\n        </div>\n\n        <Time\n          active={active}\n          status={status}\n          sessionTime={sessionTime}\n          breakTime={breakTime}\n          timeRemaining={display}\n          reset={initialize}\n        />\n\n        <div className=\"btn-group\">\n          <button id=\"reset\" onClick={initialize}>\n            <span>&#8634;</span>\n          </button>\n          <button id=\"start_stop\" onClick={startTimer}>\n            {\n              (active = !active ? (\n                <span>&#9658;</span>\n              ) : (\n                <span>&#10074;&#10074;</span>\n              ))\n            }\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\nTimer.prototypes = {\n  status: PropTypes.bool.isRequired,\n  active: PropTypes.bool.isRequired,\n  display: PropTypes.number.isRequired,\n  initialize: PropTypes.func.isRequired,\n  startTimer: PropTypes.func.isRequired\n};\nexport default Timer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport class Break extends Component {\n  render() {\n    let { display, increment, decrement } = this.props;\n    return (\n      <div className=\"break-length-box\">\n        <button id=\"break-increment\" onClick={increment}>\n          +\n        </button>\n        <div id=\"break-length\">{display}</div>\n        <button id=\"break-decrement\" onClick={decrement}>\n          -\n        </button>\n        <div id=\"break-label\">Break Length</div>\n      </div>\n    );\n  }\n}\nBreak.prototypes = {\n  increment: PropTypes.func.isRequired,\n  decrement: PropTypes.func.isRequired,\n  time: PropTypes.number.isRequired\n};\n\nexport default Break;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Session(props) {\n  let { display, increment, decrement } = props;\n  return (\n    <div className=\"session-length-box\">\n      <button id=\"session-increment\" onClick={increment}>\n        +\n      </button>\n      <div id=\"session-length\">{display}</div>\n      <button id=\"session-decrement\" onClick={decrement}>\n        -\n      </button>\n      <div id=\"session-label\">Session Length</div>\n    </div>\n  );\n}\n\nSession.propTypes = {\n  increment: PropTypes.func.isRequired,\n  decrement: PropTypes.func.isRequired,\n  display: PropTypes.number.isRequired\n};\n\nexport default Session;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"./styles/main.css\";\nimport Footer from \"./components/Footer\";\nimport Timer from \"./components/Timer\";\nimport Break from \"./components/Break\";\nimport Session from \"./components/Session\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sessionTime: 25,\n      breakTime: 5,\n      time: 25 * 60,\n      active: false, //toggle key between start(true) or pause(false)\n      status: false // toggle between session(true) or Break(false)\n    };\n\n    this.initialize = this.initialize.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n    this.increment = this.increment.bind(this);\n    this.decrement = this.decrement.bind(this);\n    this.countDown = this.countDown.bind(this);\n  }\n  //Reset btn\n  initialize() {\n    clearInterval(this.counter);\n    this.audio.pause();\n    this.audio.currentTime = 0;\n    this.setState({\n      sessionTime: 25,\n      breakTime: 5,\n      time: 25 * 60,\n      active: false,\n      status: false\n    });\n  }\n\n  startTimer(e) {\n    //Start mode active is true\n    if (!this.state.active) {\n      this.counter = setInterval(this.countDown, 1000);\n    }\n\n    //Pause mode acitve is false\n    if (this.state.active) {\n      clearInterval(this.counter);\n      this.audio.pause();\n      this.setState({\n        active: false\n      });\n    }\n  }\n\n  // Timer main operation\n  //switching between Session and Break\n  countDown() {\n    //start decrementing time duration\n    //active true: change the label of btn from start to pause\n    this.setState({\n      time: this.state.time - 1,\n      active: true\n    });\n\n    //keep track of session and break\n    if (this.state.time < 0) {\n      clearInterval(this.counter);\n      this.audio.play();\n      this.audio.currentTime = 0;\n      let newState;\n\n      //if countdown time is zero. switch time to Break Length\n      if (!this.state.status) {\n        newState = {\n          time: this.state.breakTime * 60,\n          active: false,\n          status: true\n        };\n      } else {\n        //if countdown time is not zero. keep time as session length\n\n        newState = {\n          time: this.state.sessionTime * 60,\n          status: false,\n          active: false\n        };\n      }\n      this.setState(newState);\n      this.startTimer();\n    }\n  }\n\n  increment(e) {\n    let { breakTime, sessionTime } = this.state;\n    if (e.target.id === \"break-increment\" && breakTime !== 60) {\n      this.setState({ breakTime: breakTime + 1 });\n    }\n\n    if (e.target.id === \"session-increment\" && sessionTime !== 60) {\n      this.setState({\n        sessionTime: sessionTime + 1,\n        time: sessionTime * 60 + 60\n      });\n    }\n  }\n\n  decrement(e) {\n    let { breakTime, sessionTime } = this.state;\n    if (e.target.id === \"break-decrement\" && breakTime !== 1) {\n      this.setState({ breakTime: breakTime - 1 });\n    }\n\n    if (e.target.id === \"session-decrement\" && sessionTime !== 1) {\n      this.setState({\n        sessionTime: sessionTime - 1,\n        time: sessionTime * 60 - 60\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"App-header\">Pomodoro Clock</h1>\n        <div className=\"pgt-timer\">\n          <Timer\n            status={this.state.status}\n            display={this.state.time}\n            initialize={this.initialize}\n            startTimer={this.startTimer}\n            active={this.state.active}\n            breakTime={this.state.breakTime}\n            sessionTime={this.state.sessionTime}\n          />\n        </div>\n        <div className=\"pgt-control-btn\">\n          <div className=\"pgt-breaker\">\n            <Break\n              display={this.state.breakTime}\n              increment={this.increment}\n              decrement={this.decrement}\n            />\n          </div>\n\n          <div className=\"pgt-session\">\n            <Session\n              display={this.state.sessionTime}\n              increment={this.increment}\n              decrement={this.decrement}\n            />\n          </div>\n        </div>\n\n        <audio\n          id=\"beep\"\n          src=\"red-alert.mp3\"\n          ref={ref => (this.audio = ref)}\n        ></audio>\n        <div className=\"pgt-footer\">\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}